name: CI integration tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**.js'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:

      - name: Get the public IP of the runner
        id: get-ip
        shell: bash
        run: |
          echo "ip-address=$(curl https://checkip.amazonaws.com)"

      - name: Permit the runner to access MongoDB Atlas
        id: allow-ip
        shell: bash
        run: |
          curl \
            --data '[{"ipAddress": "${{ steps.get-ip.outputs.ip-address }}", "comment": "GitHub Actions Runner"}]' \
            --digest \
            --header 'Accept: application/vnd.atlas.2023-02-01+json' \
            --header 'Content-Type: application/json' \
            --user "$USERNAME:$PASSWORD" \
            "https://cloud.mongodb.com/api/atlas/v2/groups/$GROUP_ID/accessList"
        env:
          GROUP_ID: ${{ secrets.ATLAS_ORG_ADMIN_GROUP_KEY }}
          PASSWORD: ${{ secrets.ATLAS_ORG_ADMIN_PRIVATE_KEY }}
          USERNAME: ${{ secrets.ATLAS_ORG_ADMIN_PUBLIC_KEY }}
          BASE_DB_URI: ${{ secrets.ATLAS_DB_URI }}
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      - name: Run integration tests with Ava
        working-directory: ./server
        run: npx ava test/integration/*.js

      - name: Revoke the runner's access to MongoDB Atlas
        if: always() && steps.allow-ip.outcome == 'success'
        shell: bash
        run: |
          curl \
            --digest \
            --header 'Accept: application/vnd.atlas.2023-02-01+json' \
            --request 'DELETE' \
            --user "$USERNAME:$PASSWORD" \
            "https://cloud.mongodb.com/api/atlas/v2/groups/$GROUP_ID/accessList/${{ steps.get-ip.outputs.ip-address }}"
        env:
          GROUP_ID: ${{ secrets.ATLAS_ORG_ADMIN_GROUP_KEY }}
          PASSWORD: ${{ secrets.ATLAS_ORG_ADMIN_PRIVATE_KEY }}
          USERNAME: ${{ secrets.ATLAS_ORG_ADMIN_PUBLIC_KEY }}
